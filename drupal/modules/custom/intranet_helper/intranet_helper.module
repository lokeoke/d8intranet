<?php

use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\user\Entity\User;

/**
 * Implements hook_user_login().
 */
function intranet_helper_user_login($account) {
  if (Drupal::request()->query->get('redirect')) {
    global $base_root;

    // Set redirect headers to Drupal response.
    $response = new RedirectResponse($base_root);
    $response->send();
  }
}

/**
 * Implements hook_user_logout().
 */
function intranet_helper_user_logout($account) {
  // Check out user.
  \Drupal::service('intranet_helper.services.api')->checkUserOut(time(), $account->id());

  if (Drupal::request()->query->get('redirect')) {
    global $base_root;

    // Set redirect headers to Drupal response.
    $response = new RedirectResponse($base_root);
    $response->send();
  }
}


/**
 * Implements hook_cron().
 */
function intranet_helper_cron() {
  $config = \Drupal::configFactory()->getEditable('intranet_helper.settings');
  $current_date = new DateTime();
  $last_cron_date = new DateTime(date('Y-m-d', $config->get('interval')));
  $days_diff = $current_date->diff($last_cron_date)->days;

  if ($days_diff) {
    $intranetApi = \Drupal::service('intranet_helper.services.api');
    $users = $intranetApi->getCheckedInUsers(FALSE);

    foreach ($users as $user) {
      $uid = (int) $user['uid'];

      if (!in_array($uid, array(0, 1))) {
        $intranetApi->checkUserOut(time(), $uid);
      }
    }

    $config->set('interval', time())->save();
  }
}
